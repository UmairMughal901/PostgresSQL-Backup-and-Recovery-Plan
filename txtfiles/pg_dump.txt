-bash-4.2$ pg_dump -U postgres tutdb > /tmp/tempfile/20200623backuptutdb.backup
-bash-4.2$ pg_dump -U postgres tutdb > /tmp/tempfile/20200623backuptutdb.sql
-bash-4.2$ pg_dump -U postgres tutdb > /tmp/tempfile/20200623backuptutdb.dump
-bash-4.2$ pg_dump -U postgres tutdb > /tmp/tempfile/20200623backuptutdb.tar

-bash-4.2$ pg_dumpall -U postgres --schema-only > /tmp/tempfile/20200623tutdbdefinitions.sql
-bash-4.2$ pg_dumpall -U postgres --roles-only > /tmp/tempfile/20200623tutdbdro;es.sql
bash: es.sql: command not found...
-bash-4.2$ pg_dumpall -U postgres --roles-only > /tmp/tempfile/20200623tutdbdroes.sql
-bash-4.2$ pg_dumpall -U postgres --tablespaces-only > /tmp/tempfile/20200623tutdbdTBS.sql
-bash-4.2$ clearr
bash: clearr: command not found...
Similar command is: 'clear'
-bash-4.2$ logout
[umair@localhost ~]$ clear

[umair@localhost ~]$ ##connect to the Database User
[umair@localhost ~]$ sudo su - postgres
[sudo] password for umair: 
Last login: Mon Jun 22 23:03:10 PKT 2020 on pts/0
-bash-4.2$ psql
psql (11.8)
Type "help" for help.

postgres=# ##check how many databases available with howmany roles
postgres-# l --help
postgres-# \l+
                                                                    List of data
bases
   Name    |  Owner   | Encoding |   Collate   |    Ctype    |   Access privileg
es   |  Size   | Tablespace |                Description                 
-----------+----------+----------+-------------+-------------+------------------
-----+---------+------------+--------------------------------------------
 mydb2     | myuser2  | UTF8     | en_US.UTF-8 | en_US.UTF-8 |                  
     | 7941 kB | pg_default | 
 newdb     | testuser | UTF8     | en_US.UTF-8 | en_US.UTF-8 |                  
     | 7941 kB | pg_default | 
 postgres  | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 |                  
     | 7941 kB | pg_default | default administrative connection database
 template0 | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres      
    +| 7801 kB | pg_default | unmodifiable empty database
           |          |          |             |             | postgres=CTc/post
gres |         |            | 
 template1 | postgres | UTF8     | en_US.UTF-8 | en_US.UTF-8 | =c/postgres      
    +| 7941 kB | pg_default | default template for new databases
           |          |          |             |             | postgres=CTc/post
gres |         |            | 
 tutdb     | postgres | UTF8     | en_US.utf8  | en_US.utf8  |                  
     | 15 MB   | pg_default | 
(6 rows)

postgres-# \q
-bash-4.2$ ## now take first backup using pd_dump utility
-bash-4.2$ ## thats better to read first pg_dump man page for understaning how many option you have
-bash-4.2$ pg_dump
--
-- PostgreSQL database dump
--

-- Dumped from database version 11.8
-- Dumped by pg_dump version 11.8

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- PostgreSQL database dump complete
--

-bash-4.2$ pg_dump --help
pg_dump dumps a database as a text file or to other formats.

Usage:
  pg_dump [OPTION]... [DBNAME]

General options:
  -f, --file=FILENAME          output file or directory name
  -F, --format=c|d|t|p         output file format (custom, directory, tar,
                               plain text (default))
  -j, --jobs=NUM               use this many parallel jobs to dump
  -v, --verbose                verbose mode
  -V, --version                output version information, then exit
  -Z, --compress=0-9           compression level for compressed formats
  --lock-wait-timeout=TIMEOUT  fail after waiting TIMEOUT for a table lock
  --no-sync                    do not wait for changes to be written safely to disk
  -?, --help                   show this help, then exit

Options controlling the output content:
  -a, --data-only              dump only the data, not the schema
  -b, --blobs                  include large objects in dump
  -B, --no-blobs               exclude large objects in dump
  -c, --clean                  clean (drop) database objects before recreating
  -C, --create                 include commands to create database in dump
  -E, --encoding=ENCODING      dump the data in encoding ENCODING
  -n, --schema=SCHEMA          dump the named schema(s) only
  -N, --exclude-schema=SCHEMA  do NOT dump the named schema(s)
  -o, --oids                   include OIDs in dump
  -O, --no-owner               skip restoration of object ownership in
                               plain-text format
  -s, --schema-only            dump only the schema, no data
  -S, --superuser=NAME         superuser user name to use in plain-text format
  -t, --table=TABLE            dump the named table(s) only
  -T, --exclude-table=TABLE    do NOT dump the named table(s)
  -x, --no-privileges          do not dump privileges (grant/revoke)
  --binary-upgrade             for use by upgrade utilities only
  --column-inserts             dump data as INSERT commands with column names
  --disable-dollar-quoting     disable dollar quoting, use SQL standard quoting
  --disable-triggers           disable triggers during data-only restore
  --enable-row-security        enable row security (dump only content user has
                               access to)
  --exclude-table-data=TABLE   do NOT dump data for the named table(s)
  --if-exists                  use IF EXISTS when dropping objects
  --inserts                    dump data as INSERT commands, rather than COPY
  --load-via-partition-root    load partitions via the root table
  --no-comments                do not dump comments
  --no-publications            do not dump publications
  --no-security-labels         do not dump security label assignments
  --no-subscriptions           do not dump subscriptions
  --no-synchronized-snapshots  do not use synchronized snapshots in parallel jobs
  --no-tablespaces             do not dump tablespace assignments
  --no-unlogged-table-data     do not dump unlogged table data
  --quote-all-identifiers      quote all identifiers, even if not key words
  --section=SECTION            dump named section (pre-data, data, or post-data)
  --serializable-deferrable    wait until the dump can run without anomalies
  --snapshot=SNAPSHOT          use given snapshot for the dump
  --strict-names               require table and/or schema include patterns to
                               match at least one entity each
  --use-set-session-authorization
                               use SET SESSION AUTHORIZATION commands instead of
                               ALTER OWNER commands to set ownership

Connection options:
  -d, --dbname=DBNAME      database to dump
  -h, --host=HOSTNAME      database server host or socket directory
  -p, --port=PORT          database server port number
  -U, --username=NAME      connect as specified database user
  -w, --no-password        never prompt for password
  -W, --password           force password prompt (should happen automatically)
  --role=ROLENAME          do SET ROLE before dump


-bash-4.2$ pg_dump -U postgres tutdb > /tmp/tempfile/20200623backup.tar
-bash-4.2$ ## how have other dump file formate options such as .sql .dump .tar
-bash-4.2$ pg_dump -U postgres tutdb > /tmp/tempfile/20200623backup.dump
-bash-4.2$ pg_dump -U postgres tutdb > /tmp/tempfile/20200623backup.sql
-bash-4.2$ ## we have taken the dump backup of tutdb in all file formates
-bash-4.2$ ## So now we will take backups for indivisual schema , tablespcaes or roles etc
-bash-4.2$ pg_dumpall -U postgres --schema-only > /tmp/tempfile/20200623schemasforall.sql
-bash-4.2$ ## similarly we will take the backup of all roles or users
-bash-4.2$ pg_dumpall -U postgres --roles-only > /tmp/tempfile/20200623allroles.sql
-bash-4.2$ ## similarly tablespaces for all dbs or default databases
-bash-4.2$ pg_dumpall -U postgres --tablespaces-only > /tmp/tempfile/20200623alltablespaces.sql
-bash-4.2$ ## So we have taken the all backups
-bash-4.2$ pg_dump -h localhost -p 5432 -U postgres -F c -b -v -f 
pg_dump: option requires an argument -- 'f'
Try "pg_dump --help" for more information.
